@model DigitalDevices.Models.EditProductViewModel

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post">
            <input type="hidden" asp-for="Id" />

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Model" class="control-label"></label>
                <input asp-for="Model" class="form-control" />
                <span asp-validation-for="Model" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Color" class="control-label"></label>
                <input asp-for="Color" class="form-control" />
                <span asp-validation-for="Color" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Warranty" class="control-label"></label>
                <input asp-for="Warranty" class="form-control" />
                <span asp-validation-for="Warranty" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ManufacturerId" class="control-label"></label>
                <select asp-for="ManufacturerId" class="form-control"
                        asp-items="@(new SelectList(ViewBag.Manufacturers, "Id", "Name"))">
                    >
                </select>
            </div>
            <div class="form-group">
                <label asp-for="ProductTypeId" class="control-label"></label>
                <select asp-for="ProductTypeId"
                        class="form-control"
                        id="typeSelect"
                        asp-items="@(new SelectList(ViewBag.ProductTypes, "Id", "Name"))">
                </select>
            </div>
                <div id="characteristicsContainer">
                    @foreach (var (charItem, index) in Model.Characteristics.Select((c, i) => (c, i)))
                    {
                    <input type="hidden" name="Characteristics.Index" value="@index" />
                        <div class="form-group">
                            <input type="hidden"
                                   name="Characteristics[@index].CharacteristicTypeId"
                                   value="@charItem.CharacteristicTypeId" />

                            @if (charItem.DataType == "enum")
                            {
                                <label>@charItem.Name</label>
                                <select name="Characteristics[@index].Value"
                                        class="form-control"
                                        asp-items="@(new SelectList(charItem.EnumValues, "Key", "Value"))">
                                </select>
                            }
                            else
                            {
                                <label>@charItem.Name</label>
                                <input type="text"
                                       name="Characteristics[@index].Value"
                                       value="@charItem.Value"
                                       class="form-control" />
                            }
                        </div>
                    }
                </div>

                <button type="submit" class="btn btn-primary">Сохранить</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            var initialTypeId = $('#typeSelect').val();
            if(initialTypeId) {
                GetCharacteristics(initialTypeId, true);
            }
        });
        $('#typeSelect').change(function() {
        var productTypesId = $(this).val();
        GetCharacteristics(productTypesId)
        });
        function GetCharacteristics(productTypesId, isEdit = false) {
            $.getJSON('/Products/GetCharacteristics', { productTypeId: productTypesId }, function(data) {
                var container = $('#namesContainer');
                container.empty();

                data.forEach(function(charType, index) {
                    var currentValue = '';
                    if(isEdit) {
                        var existingChar = $('input[name="Characteristics[' + index + '].CharacteristicTypeId"]').val();
                        currentValue = $('input[name="Characteristics[' + index + '].Value"]').val();
                    }

                    var fieldHtml = `
                        <div class="form-group">
                            <input type="hidden" name="Characteristics.Index" value="${index}" />
                            <input type="hidden"
                                   name="Characteristics[${index}].CharacteristicTypeId"
                                   value="${charType.id}" />
                            <label>${charType.name}</label>
                    `;

                    if(charType.type === 'enum') {
                        fieldHtml += `
                            <select name="Characteristics[${index}].Value" class="form-control">
                                ${Object.entries(charType.values).map(([key, val]) => `
                                    <option value="${key}" ${key === currentValue ? 'selected' : ''}>${val}</option>
                                `).join('')}
                            </select>
                        `;
                    }
                    else
                    {
                        if (charType.type === 'float'
                        || charType.type === 'double'
                        || charType.type === 'decimal')
                        {
                            fieldHtml += `
                            <input type="number" step="0.1"
                                   name="Characteristics[${index}].Value"
                                   value="${currentValue}"
                                   class="form-control" />
                        `;
                        }
                        else if (charType.type === 'bool'
                        || charType.type === 'boolean')
                        {
                            fieldHtml += `
                            <input type="checkbox"
                                   name="Characteristics[${index}].Value"
                                   value="${currentValue}" />
                        `;
                        }
                        else
                        {
                        fieldHtml += `
                            <input type="${getInputType(charType.Type)}"
                                   name="Characteristics[${index}].Value"
                                   value="${currentValue}"
                                   class="form-control" />
                        `;
                        }
                    }

                    fieldHtml += `</div>`;
                    container.append(fieldHtml);

                });
            });
        }
        function GetInputType(dataType) {
            const typeMap = {
                'int': 'number',
                'datetime': 'datetime-local',
                'date': 'date',
                'time': 'time',
                'string': 'text'
            };

            return typeMap[dataType.toLowerCase()] || 'text';
        }
    </script>
}